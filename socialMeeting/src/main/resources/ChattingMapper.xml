<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.social.dao.ChattingMapper">
		

	<select id="selectAllMeeting" parameterType="map" resultType="Meeting">
	select 
	m.meetingname
	,c.LOCATION_LAT
    ,c.LOCATION_LNG
	,m.purpose
	,m.peoplenum
	,m.addr
	,nvl(a.presentnum,0)+1 as joinnum 
	,to_char(m.dday,'YYYY-MM-DD HH24:MI') dday 
	,to_char(m.enddate,'YYYY-MM-DD HH24:MI') enddate
	from (select count(*) as presentnum, meetingname from participate group by meetingname) a 
	right outer join meeting m
	on a.meetingname = m.meetingname
	inner join chatroom c
    on c.ROOMNAME = m.meetingname
	where m.${search} like '%'||#{searchWord}||'%' 
	and status = '0'
	order by dday
	</select> 
	
	<select id="findmeeting" parameterType="String" resultType="Meeting">
	select 
	m.meetingname
	,m.info
	,m.creator
	,m.purpose
	,m.peoplenum
	,m.addr
	,nvl(a.presentnum,0)+1 as joinnum 
	,to_char(m.dday,'YYYY-MM-DD HH24:MI') dday 
	,to_char(m.enddate,'YYYY-MM-DD HH24:MI') enddate
	from (select count(*) as presentnum, meetingname from participate group by meetingname) a 
	right outer join meeting m
	on a.meetingname = m.meetingname
	where m.meetingname=#{meetingname}
	</select>
	
	<select id="getTotal" parameterType="map" resultType="int">
	select count(*) from meeting
		where ${search} like '%'||#{searchWord}||'%' and status='0'
	</select>
	
	<insert id="insertMeeting" parameterType="Meeting">
	insert into Meeting(	
			meetingname
			,purpose
			,info
			,dday
			,peoplenum
			,creator
			,enddate
			,addr
		)
		values(
			#{meetingname}
			,#{purpose}
			,#{info}
			,to_timestamp(#{dday}, 'YYYY-MM-DD"T"HH24:MI')
			,#{peoplenum}
			,#{creator}
			,to_timestamp(#{enddate}, 'YYYY-MM-DD"T"HH24:MI')
			,#{addr}
		)
	</insert>
	
	<insert id="insertChatRoom" parameterType="ChatRoom">
		insert into chatroom(	
			roomnum
			,roomname
			,location_lat
			,location_lng
		)
		values(
			chatroomnum_seq.nextVal
			,#{roomName}
			,#{location_lat}
			,#{location_lng}
		) 
	</insert>
	
	<insert id="insertParticipate" parameterType="Participate">
		merge into participate 
      	using dual
      	on(user_id= #{user_id} and meetingname=#{meetingname})     
      	when not matched then
      	insert(	
			participatenum
			,joindate
			,user_id
			,meetingname)
		values( 
			participate_seq.nextval
			,sysdate
			,#{user_id}
			,#{meetingname})
	</insert>
	
	<delete id="deletepart" parameterType="participate">
		delete from participate where 
		meetingname=#{meetingname} 
		<if test="user_id != null">
		and user_id=#{user_id} 
		</if>
	
	</delete>

	<select id="selectMemberList" parameterType="String" resultType="participate">
		select joindate, meetingname, user_id from participate where meetingname=#{meetingname}
	</select>
	
	<update id="deleteMeeting" parameterType="String">
		update meeting set 
		status = 1
		where meetingname=#{meetingname}
	</update>
	
	<delete id="deleteChatroom" parameterType="String">
		delete from chatroom where roomname=#{meetingname}
	</delete>
	
	
</mapper>
